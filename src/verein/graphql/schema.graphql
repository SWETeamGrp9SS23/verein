schema {
  query: Query
  mutation: Mutation
}

"""
Funktionen, um Vereinsdaten zu lesen
"""
type Query {
  # hier wird der verein nach den namen gefiltert es wird die liste verein gefiltert
  vereine(name: String): [Verein!]
  verein(id: ID!): Verein
}

"""
Daten zu Adresse eines Vereins
"""
type Adresse {
  plz: String!
  ort: String
}

"""
Daten zu Adresse eines neuen Vereins
"""
input AdresseInput {
  plz: String!
  ort: String
}

"""
Funktionen, um Vereine neu anzulegen, zu aktualisieren oder zu löschen
"""
type Mutation {
  create(input: VereinInput!): String
  update(input: VereinUpdateInput!): Boolean
  delete(id: ID!): Boolean
}

"""
Datenschema zu einem Verein, das gelesen wird
"""
type Verein {
  id: ID!
  version: Int!
  name: String!
  mitgliedsbeitrag: Float!
  entstehungsdatum: String
  homepage: String
  adresse: Adresse
}

"""
Daten für ein neuen Verein
"""
input VereinInput {
  name: String!
  mitgliedsbeitrag: Float!
  entstehungsdatum: String
  homepage: String
  adresse: AdresseInput!
}

"""
Daten für ein zu ändernden Verein
"""
input VereinUpdateInput {
  id: ID
  version: Int
  mitgliedsbeitrag: Float
  entstehungsdatum: String
  homepage: String
  name: String
}
