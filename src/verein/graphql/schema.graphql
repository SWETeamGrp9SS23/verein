# Copyright (C) 2021 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# siehe app.module.ts

# fehlt adresse

schema {
  query: Query
  mutation: Mutation
}

"Funktionen, um Vereinsdaten zu lesen"
type Query {
  # hier wird der verein nach den namen gefiltert es wird die liste verein gefiltert
  vereine(name: String): [Verein!]

  verein(id: ID!): Verein
}

"Funktionen, um Vereine neu anzulegen, zu aktualisieren oder zu löschen"
type Mutation {
  create(input: VereinInput!): String

  update(input: VereinUpdateInput!): Int

  delete(id: ID!): Boolean
}

"Daten zu Adresse eines Vereins" # nochmal checken wann muss es einzeln da steheen und wann nicht
type Adresse {
  plz: String!
  ort: String
}

"Datenschema zu einem Verein, das gelesen wird"
type Verein {
  id: ID!
  version: Int!
  name: String!
  mitgliedsbeitrag: Float!
  entstehungsdatum: String
  homepage: String
  adresse: Adresse
}

"Daten zu Adresse eines neuen Vereins" # nochmal checken wann muss es einzeln da steheen und wann nicht
type AdresseInput {
  plz: String!
  ort: String
}

"Daten für ein neuen Verein"
input VereinInput {
  name: String!
  mitgliedsbeitrag: Float
  entstehungsdatum: String
  homepage: String
  adresse: AdresseInput
}

"Daten für ein zu ändernden Verein"
input VereinUpdateInput {
  id: ID
  version: Int
  mitgliedsbeitrag: Float
  entstehungsdatum: String
  homepage: String
  name: String
}
